+ Add
- Remove
~ Change


Program.cs
	+ Main()

Environment
	+ -_selectedDevice : Device
	+ -_selectedRover : Rover
	+ -_offset : int

	~ +Environment(height : int, width : int, rovers : int, specimen : int)
	+ +Update()
	+ +Draw()
	+ +DrawSidebar()
	+ +CountSpecimensRemaining() : int
	+ +SelectNextRover()
	+ +SelectDevice()

	+ +Height : int <Readonly>
	+ +Width : int <Readonly>
	+ +Offset : int <Readonly>
	+ +SelectedRover : Rover <Readonly>
	+ +SelectedDevice : Device <Readonly>

GameObject
	+ -_environment : Environment

	+ +GameObject(x,y,size : int, name : string, env : Environment)
	+ +Draw <<abstract>>
	+ +IsIn(hostObj : GameObject, radius : int) : bool
	+ +IsIn (x1,y1,x2,y2 : int) : bool

	+ +DrawX : int <readonly>
	+ +DrawY : int <readonly>
	+ +Env : Environment <readonly>

Rover
	+ -_batteries : List<Battery>
	
	~ +Rover(x,y,size : int, name : string, env : Environment)
	~ +Draw() <Override>
	+ +Update()
	+ +ListAttachedDevices() : string
	+ +ListExtractedSpecimens() : string
	
	+ +Batteries : List<Battery> <Readonly>

Specimen
	+ -_isVisible : bool
	
	+ +Specimen(scientist, name : string, x,y,size : int, env : Environment)
	+ +Draw() <Override>

	+ +IsVisible : bool <Property>

Device
	~ -_usesCharge : int
	+ -_rover : Rover
	+ -_selected : bool

	+ +Device(name : string, usesCharge : int, rover : Rover)
	
	~ +Use() <Virtual>
	+ +Update() <Virtual>

	~ +UsesCharge : int <Readonly>
	+ +Rover : Rover <property>
	+ +Env : Environment <readonly>
	+ +Selected : bool <property>	

Radar
	+ -USES_CHARGE : int <const>
	+ -RADAR_RANGE : int <Protected const>

	+ +Radar(name : string, env : environment, rover : Rover)

*For all radars*
	+ +RADARNAME(name : string, env : environment, rover : Rover)
	~ Use() <Override>

Battery
	+ -_inUse : bool
	~ -_Charge : int

	+ +Battery(name : string)
	+ +Discharge(amount : int) 
	
	~ +Charge : int <property>
	+ +InUse : bool <property>

Drill
	- -_usable : bool
	+ -_USES_CHARGE : int <const>

	+ +Drill(name : string, rover : Rover)
	~ +Use() <Override>
	+ +Update() <Override>
	+ +IsSuccessfulUse() : bool
	- +CalcWear() : double
	
	- +Colliding : bool

Motor
	+ -USES_CHARGE : int <const>
	+ -_dir : EDirection

	+ +Motor(name : string, direction : EDirection, rover : Rover)
	~ +Use() <override>

Solar
	+ -USES_CHARGE : int <const>
	
	+ +Solar(name : string, rover : Rover)

+ Enum EDirection 
	+{ Up, Down, Left, Right}